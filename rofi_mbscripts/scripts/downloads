#!/bin/bash

# user variables
SCREENSHOT_DIRECTORY=$HOME/Downloads/

# application variables
BIND1="alt+u"
BIND2="alt+p"
BIND3="alt+r"

# launcher variables
MSG=$(echo -e "enter to open,")
#MSG="$MSG $(echo -e "$BIND1 to upload,")"
#MSG="$MSG $(echo -e "$BIND2 to preview,")"
#MSG="$MSG $(echo -e "$BIND3 to rename.")"
PROMPT="downloads:"
ANSWER=""
SEL=""
if [[ $# -gt 0 ]];then
   FILTER="$1"
fi
INDEX=0
if [[ -z "$LAUNCHER" ]];then
   LAUNCHER="rofi"
fi


function _launcher () {
   rofi -dmenu -p "$PROMPT" -mesg "$MSG" \
      -format 'i;f;s' -selected-row $INDEX -filter "$FILTER"
      #-kb-custom-1 "$BIND1" -kb-custom-2 "$BIND2" -kb-custom-3 "$BIND3"\
}

# upload image and notify via notify-send
function upload() {
   if [[ ! -z $1 ]]; then
      #p=1 == long url
      #sunset=432000 kill screenshot after 5 days
      curl -F c=@${1} -F p=1 sunset=432000 https://ptpb.pw &>/tmp/curl.progress
      wait
      url=$(tail -n3 /tmp/curl.progress | grep "^url: "| cut -c6-)
      regex='(https?|http)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]'
      echo "URL: $url"
      if [[ ! $url =~ $regex ]]; then
         echo "Upload failed..."
         echo -e "Curl output:\n------------\n"
         cat /tmp/curl.progress
         notify-send "Upload failed... /tmp/curl.progress"
         exit 1
      else
         notify-send "Screenshot uploaded" "${url}" && \
         echo -n "$url" | xclip -i -selection primary && \
         echo -n "$url" | xclip -i -selection clipboard
      fi
   fi
}

function rename_download() {
   if [[ -z "$SEL" ]];then
      echo ""
   else
      MSG2=$(echo -e "Rename $SEL. Write new name and press enter.")
      PROMPT2=$(echo -e "downloads (rename):")
      NEWSEL=${SEL%.*}
      newname=$(echo -e "" | rofi -dmenu -p "$PROMPT2" -mesg "$MSG2" \
                                 -format 'f' -filter "$1")
      exitc=$?
      if [[ $exitc -eq 1 ]]; then
         echo "" 
      else
         echo $newname
      fi
   fi
}

function list_downloads () {
   for entry in "$SCREENSHOT_DIRECTORY"/*; do
      printf '%s\n' "${entry##*/}"
   done
}

function main_function () {
   ANSWER=$( list_downloads | tac | _launcher ) 
   EXIT=$?
   IFS=';' read INDEX FILTER SEL <<< $ANSWER
}

list_downloads
#while true; do
#
#   main_function
#   echo ANSWER: $ANSWER
#   echo INDEX: $INDEX
#   echo SEL: $SEL
#   if [[ $EXIT -eq 0 ]]; then
#      if [[ ! -z "$SEL" ]]; then
#         xdg-open "$SCREENSHOT_DIRECTORY/$SEL"
#      fi
#      break
#   elif [[ $EXIT -eq 1 ]]; then
#      break
#   else
#      break
#   fi
#
#done
