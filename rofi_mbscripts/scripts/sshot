#!/bin/bash

# user variables
if [[ -z $UPLOAD ]]; then
   UPLOAD=false
fi

if [[ -z $DELAY ]]; then
DELAY="0"
fi

# application variables
BIND1="alt+d"
BIND2="alt+u"

# launcher variables
MSG=$(echo -e        "enter: take screenshot,")
MSG="${MSG} $(echo -e "$BIND1: add delay,")"
MSG="${MSG} $(echo -e "$BIND2: toggle upload.")"
if $UPLOAD; then
   PROMPT="sshot (upload):"
else
   PROMPT="sshot (noupload):"
fi
ANSWER=""
SEL=""
FILTER=""
INDEX=0
if [[ -z "$LAUNCHER" ]];then
   LAUNCHER="rofi"
fi


# run correct launcher with prompt and help message
function _launcher () {
   rofi -dmenu -p "$PROMPT" -mesg "$MSG" \
      -kb-custom-1 "$BIND1" -kb-custom-2 "$BIND2" \
      -format 'i;f;s' -selected-row $INDEX -filter "$FILTER"
}

function _sshot () {
   if $UPLOAD; then
      SSHOT_UPLOAD=true  sshot $@
   else
      SSHOT_UPLOAD=false sshot $@
   fi
}

function toggle_upload () {
   if $UPLOAD; then
      return 0
   elif ! $UPLOAD; then
      return 1
   else
      return 0
   fi
}

function add_delay () {
   MSG=$(echo -e "Choose delay, or write custom one." )
   PROMPT=$(echo -e "sshot (add delay):")
   delay=$(echo -e "5\n4\n3\n2\n1" | rofi -dmenu -p "$PROMPT" -mesg "$MSG")
   exitc=$?

   if [[ $exitc -eq 1 ]]; then
      echo 0
   else
      echo $delay
   fi
}

# function that creates a list for the launcher
function print_listofopts () {
   PREPEND=""
   if [[ $DELAY -gt 0 ]]; then
      PREPEND="${PREPEND}-d $DELAY "
   fi

   IFS=$'\n'
   disps=($(xrandr | grep " connected" | awk {'printf ("%s %s %s\n", $1,$3,$4)'}))
   echo "${PREPEND}all"
   echo "${PREPEND}selection"
   for i in ${!disps[@]}
   do
      echo $PREPEND$(printf "%s" ${disps[$i]} | awk {'printf ("%s\n", $1)'})
   done
}

function main_function () {
   if $UPLOAD; then
      PROMPT="sshot (upload):"
   else
      PROMPT="sshot (noupload):"
   fi
   ANSWER="$(print_listofopts | _launcher )"
   EXIT=$?
   IFS=';' read INDEX FILTER SEL <<< $ANSWER
}

# run launcher
SEL=""
EXIT=1
while true; do
   main_function
   if [[ $EXIT -eq 1 ]]; then
      break
   elif [[ $EXIT -eq 11 ]]; then
      if ! $UPLOAD; then
         UPLOAD=true
      else
         UPLOAD=false
      fi
   elif [[ $EXIT -eq 10 ]]; then
      DELAY=$(add_delay)
   elif [[ $EXIT -eq 0 ]]; then
      #echo "sel: $SEL"
      #echo "upload: $UPLOAD"
      _sshot ${SEL}
      break
   else
      break
   fi
done

